#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
std::vector<int> solve(int N, const std::vector<int> &A) {
    // TODO: edit here
    vector<int> ans(N), B(N + 1, N + 1);
    int front;
    REP3(i, 1, N + 1) {
        if (A.at(i) == -1) {
            front = i;
        } else {
            B[A.at(i)] = i;
        }
    }
    int tmp = 0;
    while (front < N + 1) {
        ans[tmp] = front;
        front = B[front];
        tmp += 1;
    }
    return ans;
}
// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<int> A(N + 1);
    REP3(i, 1, N + 1) {
        cin >> A.at(i);
    }
    auto ans = solve(N, A);
    REP(i, (int)ans.size()) {
        std::cout << ans[i];
        if (i < (int)ans.size() - 1) cout << ' ';
    }
    std::cout << '\n';
    return 0;
}